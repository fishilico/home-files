#!/bin/sh
# SPDX-License-Identifier: MIT
#
# Copyright (c) 2013-2022 Nicolas Iooss
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
# THE SOFTWARE.
#
# Define useful shell aliases

# alias may be unavailable, for example in busybox shell (ash)
# shellcheck disable=SC2039
if type alias > /dev/null 2>&1 ; then
    # Be verbose! (note: long options may be unavailable)
    alias mkdir='mkdir -v'
    alias mount='mount -v'
    alias umount='umount -v'
    alias ln='ln -v'
    alias rm='rm -v'
    # Be interactive when overwriting files
    alias cp='cp -iv'
    alias mv='mv -iv'
    # Only show changes, if available
    case $(chmod --help 2>&1) in
        -c*|*\ -c*|*$(printf '\t')-c*)
            alias chmod='chmod -c'
            ;;
        *)
            alias chmod='chmod -v'
            ;;
    esac
    case $(chown --help 2>&1) in
        -c*|*\ -c*|*$(printf '\t')-c*)
            alias chown='chown -c'
            ;;
        *)
            alias chown='chown -v'
            ;;
    esac

    # Make "strings" never treat files as objects (much secure)
    alias strings='strings -a'

    # Always use /usr/bin/sudo if available to prevent PATH hijacking
    # Append a space to enable alias expansion
    # sadm alias is for SELinux
    if [ -x /usr/bin/sudo ] ; then
        alias s='/usr/bin/sudo -s '
        alias sadm='/usr/bin/sudo -r sysadm_r -t sysadm_t -s '
    else
        alias s='sudo -s '
        alias sadm='sudo -r sysadm_r -t sysadm_t -s '
    fi

    # Be human !
    alias df='df -h'
    alias du1='du -h --max-depth=1'
    alias du2='du -h --max-depth=2'

    # Show real devices, not virtual ones (/dev/loop or tmpfs)
    alias dfreal='df --local --exclude-type=devtmpfs --exclude-type=overlay --exclude-type=squashfs --exclude-type=tmpfs'

    # VIM aliases
    alias :w='echo "Save is not implemented in ${SHELL##*/} :p"'
    alias :x=':w'
    alias :q='echo "Type exit or ^D if you want to exit ${SHELL##*/}"'
    alias :wq='echo "Hey! That is ${SHELL##*/} and *not* VI(M)!"'

    # List files, using available ls options
    get_ls_parameters() {
        # shellcheck disable=SC3043
        local LINE COLOR_OPT ESCAPE_OPT TIMESTYLE_OPT
        # CFh = columns, classify, human
        printf ' -CFh'
        # shellcheck disable=SC2012
        ls --help 2>&1 | (
            COLOR_OPT=
            ESCAPE_OPT=
            TIMESTYLE_OPT=
            while IFS= read -r LINE ; do
                case "$LINE" in
                    *--color*)
                        COLOR_OPT=' --color=always'
                        ;;
                    *--escape*)
                        ESCAPE_OPT=' --escape'
                        ;;
                    *--time-style*)
                        # the backslashed values get replaced by printf
                        TIMESTYLE_OPT=' --time-style="+\033[0;35m%%Y-%%m-%%d %%H:%%M\033[0m"'
                        ;;
                esac
            done
            # shellcheck disable=SC2059
            printf "$COLOR_OPT$ESCAPE_OPT$TIMESTYLE_OPT"
        )
    }

    # shellcheck disable=SC2139
    alias ls="ls$(get_ls_parameters)"
    alias l='ls'
    alias la='ls -A'
    alias ll='ls -l'
    alias lla='ls -lsA'

    # SELinux aliases
    alias lsz='ls -Z'
    alias llz='ls -lZ'

    # ZSH-specific aliases
    if [ -n "${ZSH_VERSION:-}" ] ; then
        alias lsd='ls -ld *(/)'                 # only show directories
        alias lad='ls -ld .*(/)'                # only show dot-directories
        alias lsa='ls -a .*(.)'                 # only show dot-files
        alias lsd='ls -d *(/)'                  # only show directories
        alias lse='ls -d *(/^F)'                # only show empty directories
        alias lsx='ls -l *(*) | head'           # only show executables
        alias lssuid='ls -l *(s,S) | head'      # only show suid-files
        alias lsbig='ls -lSh *(.) | head'       # display the biggest files
        alias lssmall='ls -Sl *(.) | tail'      # display the smallest files
        alias lsnew='ls -rtl *(.) | tail'       # display the newest files
        alias lsold='ls -rtl *(.) | head'       # display the oldest files

        # Remember where I've been
        alias cd='pushd'
        setopt PUSHD_SILENT
    fi

    # Customize exa's long mode
    alias exa='exa --group --time-style=long-iso'

    # Go to parent directory
    alias ..='cd ..'
    alias ...='cd ../..'

    # Cut lines with space delimiter
    alias cuts='cut -d" "'

    # Get file attributes, not restricted to "^user\\."
    alias getextattr='getfattr -m - -d'

    # Run restorecon on system folders
    alias restorecon-sys='restorecon -R / -e /home -e /media -e /mnt'

    # List processes
    alias psa='ps -A'
    alias pse='ps -efH'
    alias pss='ps -aux'
    alias psx='ps -AFH'
    alias psz='ps -efZ'
    alias pshz='ps -efHZ'
    alias pstop='ps -eo pid,user,pri,ni,vsz,rsz,stat,pcpu,pmem,time,comm --sort -pcpu'

    # Shortcut to common screen options
    alias scx='screen -x'
    alias scrd='screen -RD'
    alias scls='screen -ls'

    # Clear screen with ESC + c. Ctrl+L may also work.
    # "ESC c" is documented as RIS (Reset to Initial State) in ECMA-48.
    # According to "man 4 console_codes", there can be a terminfo entry rs1=\Ec
    # than can be used with command "tput reset".
    alias cls='printf "\033c"'

    # Grep history without writing "h ..." lines into it
    histgrep() {
        fc -l 1 -1 | sed -n "/${1:-.}/s/^ */!/p" | tail -n "${2:-15}"
    }
    alias h=' histgrep'

    # Disable history
    alias nohist=' HISTFILE=/dev/null'

    # Options for grep: highlight results and exclude backup files
    # Do not use GREP_OPTIONS so that directly invoking grep does not enable
    # these options (for example with lgrep alias).
    get_grep_parameters() {
        # shellcheck disable=SC3043
        local LINE COLOR_OPT EXCLUDE_DIR_OPT EXCLUDE_OPT
        grep --help 2> /dev/null | (
            COLOR_OPT=
            EXCLUDE_DIR_OPT=
            EXCLUDE_OPT=
            while IFS= read -r LINE ; do
                case "$LINE" in
                    *--color*)
                        COLOR_OPT=' --color=always'
                        ;;
                    *--exclude-dir*)
                        EXCLUDE_DIR_OPT=' --exclude-dir=.git --exclude-dir=.svn'
                        ;;
                    *--exclude*)
                        EXCLUDE_OPT=" --exclude='*~'"
                        ;;
                esac
            done
            # shellcheck disable=SC2059
            printf "$COLOR_OPT$EXCLUDE_DIR_OPT$EXCLUDE_OPT"
        )
    }
    # shellcheck disable=SC2139,SC2262
    alias grep="grep$(get_grep_parameters)"

    # Find non-ascii characters
    alias grep-noasc="LANG=C grep -P '"'[\x80-\xFF]'"'"

    # Strip commented lines
    alias stripcom="grep -v -E '"'^[ \r\t]*(#|;|$)'"'"

    # Line-buffered grep, useful when selecting output of tail -F
    # Don't use colored output for lgrep
    case $(grep --help 2> /dev/null) in
        *--line-buffered*)
            if [ -x /usr/bin/grep ] ; then
                alias lgrep='/usr/bin/grep --line-buffered'
            elif [ -x /bin/grep ] ; then
                alias lgrep='/bin/grep --line-buffered'
            else
                alias lgrep='\grep --line-buffered'
            fi
            ;;
    esac

    # Show 3 months by default with cal
    alias cal='cal -3'

    # Display date in ISO 8601 format
    alias isodate='date -I'
    alias isotime='date -Iseconds'
    alias isoutctime='date -Iseconds --utc'
    # Format date for filenames
    alias isodatedot='date +"%Y.%m.%d"'
    alias isotimefile='date --utc +"%Y-%m-%d-%H%M%S"'

    # Show progress with dd and report I/O errors (cf. https://abbbi.github.io/dd/)
    alias ddprogress='dd status=progress'
    alias ddprosync='dd status=progress conv=fsync'
    alias ddsync='dd conv=fsync'

    # OpenSSL shortcuts
    # View a certificate request (add -verify to check it)
    alias openssl-csr='openssl req -noout -text -in'
    # View a x509 certificate
    alias openssl-crt='openssl x509 -noout -text -in'
    # View a binary (not base64-encoded) x509 certificate (DER format)
    alias openssl-der='openssl x509 -noout -text -inform DER -in'
    # View a PKCS#12 file (.pfx or .p12)
    alias openssl-p12='openssl pkcs12 -info -in'
    # View a RSA private key file
    alias openssl-rsa='openssl rsa -noout -text -in'
    # Make a SSL connection to IP:port
    alias openssl-connect='openssl s_client -connect'

    # Ask certification level when signing keys.
    alias gpg-sign='gpg --ask-cert-level --sign-key'
    alias gpg-resign-iknowwhatimdoing='gpg --ask-cert-level --expert --sign-key'

    # Add helper aliases for tpm2-pkcs11
    if [ -r '/usr/lib64/pkcs11/libtpm2_pkcs11.so' ] ; then
        LIBTPM2_PKCS11_SO_PATH='/usr/lib64/pkcs11/libtpm2_pkcs11.so'
    elif [ -r '/usr/lib/pkcs11/libtpm2_pkcs11.so' ] ; then
        LIBTPM2_PKCS11_SO_PATH='/usr/lib/pkcs11/libtpm2_pkcs11.so'
    else
        case "$(uname -m)" in
            x86_64)
                if [ -r '/usr/lib/x86_64-linux-gnu/libtpm2_pkcs11.so.1' ] ; then
                    LIBTPM2_PKCS11_SO_PATH='/usr/lib/x86_64-linux-gnu/libtpm2_pkcs11.so.1'
                fi;;
        esac
    fi
    if [ -n "${LIBTPM2_PKCS11_SO_PATH:-}" ] ; then
        # shellcheck disable=SC2139
        alias tpm2pkcs11-tool="pkcs11-tool --module ${LIBTPM2_PKCS11_SO_PATH}"
        # shellcheck disable=SC2139
        alias tpm2ssh="ssh -I ${LIBTPM2_PKCS11_SO_PATH}"
        # shellcheck disable=SC2139
        alias tpm2ssh-keygen="ssh-keygen -D ${LIBTPM2_PKCS11_SO_PATH}"
        unset LIBTPM2_PKCS11_SO_PATH
    fi

    # Colored diff
    if command -v colordiff > /dev/null 2>&1 ; then
        alias diff='colordiff -u'
        # Change svn diff.
        # You may instead put "diff-cmd = colordiff" in ~/.subversion/config
        # Use -x "-u" to show 3 lines of unified context
        # and -x "-u -w" to ignore all white space changes.
        alias svn-diff='svn diff --diff-cmd colordiff'
    else
        alias diff='diff -u'
        alias svn-diff='svn diff'
    fi

    # Diff for patches: all text, new file, show C function, unified context
    alias diff-patch='diff -aNpu'

    # Check for common misspellings using codespell in a git project
    alias codespell-git='git ls-files | xargs codespell'
    # Ignore the recommandation about "mut"
    alias codespell-git-rust='git ls-files | xargs codespell --ignore-words-list=mut'
    # Same aliases, with podman helper
    alias podman-codespell-git='git ls-files | xargs podman-codespell'
    alias podman-codespell-git-rust='git ls-files | xargs podman-codespell --ignore-words-list=mut'

    # vman = use vim as a pager
    alias vman="man -P \"/bin/sh -c \\\"col -b -p -x | \
        vim -R \
            -c 'set ft=man nolist nomod nonumber' \
            -c 'map q :q<CR>' \
            -c 'map <SPACE> <C-D>' \
            -c 'map b <C-U>' \
            -\\\"\""

    # Use neovim if is it installed
    if command -v nvim > /dev/null 2>&1 ; then
        alias vim=nvim
    fi

    # Colored dmesg
    # "sdmesg" (= sudo dmesg) is needed with /proc/sys/kernel/dmesg_restrict
    case $(dmesg --help 2> /dev/null) in
        *--color*)
            alias dmesg='dmesg --color'
            alias sdmesg='sudo dmesg --color'
            ;;
        *)
            alias sdmesg='sudo dmesg'
            ;;
    esac

    # Continued dmesg, if "dmesg -w" is not available
    alias dmesg-w='watch -n 1 dmesg \| tail -n \$\(\(\$\(tput lines\)-2\)\)'

    # Read AVC entries in systemd journal.
    # Match the following audit message types (/usr/include/linux/audit.h):
    # * 1400: AVC
    # * 1300: SYSCALL
    # * 1327: PROCTITLE
    # * 1107: USER_AVC
    # Use with "-f" option to follow the journal
    alias audit-journal='journalctl -b --identifier=audit _AUDIT_TYPE=1400 _AUDIT_TYPE=1300 _AUDIT_TYPE=1327 _AUDIT_TYPE=1107'

    # Use rsync instead of scp
    if command -v rsync > /dev/null 2>&1 ; then
        # Options: archive, verbose, compress, partial&progress
        alias scp='rsync -avzP'
    fi

    # X Window bell
    if command -v xset > /dev/null 2>&1 ; then
        alias xbell-off='xset b off'
        alias xbell-on='xset b on'
    fi

    # Colored "ip" command, since iproute2 4.1.0
    case $(ip --help 2>&1) in
        *-c\[olor\]*)
            alias ip='ip -color'
            ;;
    esac

    # DNSSEC validation with drill (from ldns package) or dig
    # In order to generate the trusted-key.key file:
    # dig +nocomments +nostats +nocmd +noquestion -t dnskey . > trusted-key.key
    if command -v drill > /dev/null 2>&1 ; then
        if [ -r '/etc/trusted-key.key' ] ; then
            # Arch Linux package dnssec-anchors provides /etc/trusted-key.key
            # https://www.archlinux.org/packages/core/any/dnssec-anchors/files/
            # Fedora package bind-utils provides /etc/trusted-key.key
            alias dnssec-check='drill -TD -k /etc/trusted-key.key'
        elif [ -r '/usr/share/dns/root.key' ] ; then
            # Debian package dns-root-data provides /usr/share/dns/root.key
            # https://packages.debian.org/sid/all/dns-root-data/filelist
            alias dnssec-check='drill -TD -k /usr/share/dns/root.key'
        elif [ -r '/var/lib/unbound/root.key' ] ; then
            # unbound-anchor creates /var/lib/unbound/root.key
            alias dnssec-check='drill -TD -k /var/lib/unbound/root.key'
        else
            alias dnssec-check='drill -TD'
        fi
    elif command -v dig > /dev/null 2>&1 ; then
        if [ -r '/etc/trusted-key.key' ] ; then
            # +multiline can be used to view DNS key id
            alias dnssec-check='dig +sigchase +topdown +trusted-key=/etc/trusted-key.key'
        elif [ -r '/usr/share/dns/root.key' ] ; then
            alias dnssec-check='dig +sigchase +topdown +trusted-key=/usr/share/dns/root.key'
        elif [ -r '/var/lib/unbound/root.key' ] ; then
            alias dnssec-check='dig +sigchase +topdown +trusted-key=/var/lib/unbound/root.key'
        else
            alias dnssec-check='dig +sigchase +topdown'
        fi
    fi

    # Generate DNS SSHFP records for the current host
    # SSHFP A H HASH with:
    #   A = 1:RSA, 2:DSA, 3:ECDSA, 4:Ed25519
    #   H = 1:SHA-1, 2:SHA-256
    #   HASH = 40 hex digits for SHA-1, 64 for SHA-256
    # e.g. the content of a record of type "SSHFP 2 2" is computed by:
    #   awk '{print $2}' /etc/ssh/ssh_host_dsa_key.pub |base64 -d |sha256sum
    alias sshfp-here='ssh-keygen -r $(hostname)'

    # View mails in hold queue
    if command -v postqueue > /dev/null 2>&1 ; then
        alias mailq-hold='postqueue -p |lgrep -E "^[0-9A-F]*!"'
    elif command -v mailq > /dev/null 2>&1 ; then
        alias mailq-hold='mailq |lgrep -E "^[0-9A-F]*!"'
    fi

    # gitk with all branches
    alias gitka='gitk --all'

    # Dump an SQLite3 database file
    alias sqlite3dump='sqlite3 < /dev/null -bail -batch -cmd .dump'

    # Add a file to the playlist of the current VLC instance.
    # This setting needs to be set in Preferences->Interface Settings:
    # "Use only one instance when started from file manager"
    alias vlc-append='vlc --started-from-file --playlist-enqueue'

    # hexdump + ascii output, with xxd, od or hexdump
    if command -v xxd > /dev/null 2>&1 ; then
        alias hexa='xxd'
        alias hexa32='xxd -c32'
    elif command -v od > /dev/null 2>&1 ; then
        alias hexa='od -tx1z -Ax'
        alias hexa32='od -tx1z -Ax -w32'
    elif command -v hexdump > /dev/null 2>&1 ; then
        # hexdump command from bsdmainutils package
        # slightly different from "hexdump -C"
        _HEXDUMP_PART1='"%07.7_ax: " 16/1 "%02x ""  "'
        _HEXDUMP_PART2='16/1 "%_p""\n"'
        # shellcheck disable=SC2139
        alias hexa="hexdump -e '$_HEXDUMP_PART1' -e '$_HEXDUMP_PART2'"
        _HEXDUMP_PART1='"%07.7_ax: " 32/1 "%02x ""  "'
        _HEXDUMP_PART2='32/1 "%_p""\n"'
        # shellcheck disable=SC2139
        alias hexa32="hexdump -e '$_HEXDUMP_PART1' -e '$_HEXDUMP_PART2'"
        unset _HEXDUMP_PART1 _HEXDUMP_PART2
    fi

    # Some shortcuts related to C and ASM
    # Transform C code to LLVM intermediate representation
    alias c2llvm='clang -S -O0 -emit-llvm -o /dev/stdout'
    # Disassemble x86 binary objects, with AT&T or intel syntax
    alias disx86_16='objdump -D -bbinary -mi8086'
    alias disx86_32='objdump -D -bbinary -mi386'
    alias disx86_64='objdump -D -bbinary -mi386:x86-64'
    alias disx86_16i='objdump -D -bbinary -mi8086 -Mintel'
    alias disx86_32i='objdump -D -bbinary -mi386 -Mintel'
    alias disx86_64i='objdump -D -bbinary -mi386:x86-64 -Mintel'
    # Disassemble ARM binary objects, using native or "none-eabi" objdump
    alias disarm='objdump -D -bbinary -marm'
    alias disarmt='objdump -D -bbinary -marm -Mforce-thumb'
    alias disnarm='arm-none-eabi-objdump -D -bbinary -marm'
    alias disnarmt='arm-none-eabi-objdump -D -bbinary -marm -Mforce-thumb'
    # Disassemble ARM64 binary objects
    alias disarm64='objdump -D -bbinary -maarch64'
    alias disgarm64='aarch64-linux-gnu-objdump -D -bbinary -maarch64'

    # Run a program into gdb and break on Address Sanitizer errors
    alias gdb-run='gdb -q -ex run --args'
    alias gdb-asan-run='gdb -q -ex "tbreak _start" -ex run -ex "break __asan_report_error" -ex continue --args'

    # Read the internal Flash content (options verbose, programmer, read)
    alias myflashrom='flashrom -V -p internal -r'

    # Disable ASLR (Address-Space Layout Randomisation)
    alias noaslr='setarch $(uname -m) -R'

    # Python profiler
    alias pyprof='python -m cProfile -s cumtime'
    alias pyprof2='python2 -m cProfile -s cumtime'
    alias pyprof3='python3 -m cProfile -s cumtime'

    # Create a Python virtual environment with system packages
    alias virtualenv-sys='virtualenv --system-site-packages'
    alias virtualenv2-sys='virtualenv2 --system-site-packages'
    alias virtualenv3-sys='virtualenv3 --system-site-packages'

    # Always provide virtualenv2/3 as some systems do not provide them
    # Python 3.3 introduced the venv module, so use it
    alias virtualenv2='virtualenv --python=python2'
    alias virtualenv3='python3 -m venv'

    # Enumerate serial ports from pySerial
    alias pyserial-enum='python -m serial.tools.list_ports'

    # Python linter of 120-character-wide lines
    alias black-120='black --line-length=120'
    alias flake8-120='flake8 --max-line-length=120'
    alias pylint-120='pylint --max-line-length=120'

    # Open xterm in fullscreen
    alias xterm-full='xterm -bg black -fg white -fullscreen'
    # Open xterm with black-on-white colors
    alias xterm-bow='xterm -fg black -bg white'

    # Show the current keymap
    alias dump-xmodmap='xmodmap -pke'

    # Take a screen shot, using import from package imagemagick
    # Usage: screenshot myfile.png
    alias screenshot='import -window root'

    # Make Arch Linux package with a temporary directory
    # /etc/fstab may contain something like this if /tmp is mounted with noexec:
    # $USER.makepkg /tmp/makepkg-$USER tmpfs defaults,auto,nodev,exec,nosuid,gid=$GID,uid=$UID,mode=0700 0 0
    alias makepkgtmp='BUILDDIR="/tmp/makepkg-$(id -nu)" makepkg'
    alias pacaurtmp='BUILDDIR="/tmp/makepkg-$(id -nu)" pacaur'
    # Do not compress package (useful for large packages)
    alias makepkgtmptar='BUILDDIR="/tmp/makepkg-$(id -nu)" PKGEXT=.tar makepkg'
fi

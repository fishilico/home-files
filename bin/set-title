#!/bin/sh
# SPDX-License-Identifier: MIT
#
# Copyright (c) 2013-2025 Nicolas Iooss
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
# THE SOFTWARE.
#
# Set the title of the current terminal

case "$TERM" in
    linux*|vt100)
        # Linux console does not have any title
        ;;
    xterm*|rxvt*)
        # xterm uses \e]0;title\a or \e]2;title\a
        # In ECMA-48 standard (ISO/IEC 6429 Information technology - Control
        # functions for coded character sets), Operating System Command is
        # written "OSC 0 ; title ST" with OSC="ESC ]" and ST="ESC \\".
        # XTerm uses BEL="\a" instead of ST as a terminator.
        # cf. https://en.wikipedia.org/wiki/ANSI_escape_code#Escape_sequences
        # and https://man7.org/linux/man-pages/man4/console_codes.4.html
        # and https://gist.github.com/egmontkob/eb114294efbcd5adb1944c9f3cb5feda#the-escape-sequence
        printf '\033]0;%s\007' "$*"
        ;;
    screen*)
        # screen uses \ektitle\e\\
        printf '\033k%s\033\134' "$*"
        ;;
    '')
        echo >&2 "Error: \$TERM is not set"
        exit 1
        ;;
    *)
        # Test has_status_line (cf. output of "infocmp -L xterm+sl")
        if tput hs 2> /dev/null
        then
            # Use to_status_line and from_status_line
            tput tsl
            printf '%s' "$*"
            tput fsl
        else
            echo >&2 "Unsupported terminal: $TERM"
            exit 1
        fi
esac

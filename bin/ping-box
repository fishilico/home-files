#!/bin/bash
# Ping my net box at home, wifi unstable wifi interface

function echo_red()
{
    echo -e "\e[31;1m!! $*\e[m"
}
function echo_green()
{
    echo -e "\e[32m[] $*\e[m"
}
function echo_blue()
{
    echo -e "\e[34;1m[] $*\e[m"
}
function echo_white()
{
    echo -e "\e[m[] $*\e[m"
}
function echo_startgray()
{
    echo -ne "\e[37m"
}

function test_network()
{
    # Find default route interface
    local IFACE=$(ip -oneline -4 route show default |
        sed -ne 's/^.*dev \([^ ]\+\) .*$/\1/p')
    if [ -z "$IFACE" ]
    then
        echo -ne "\r!! No default route, network is unreachable"
        return 1
    fi

    # Do nothing if interface does not have an IP address
    if [ -z "$(ip -oneline -4 addr show dev "$IFACE")" ]
    then
        echo -ne "\r!! No IP address for $IFACE"
        return 1
    fi
    echo_white "$(date)"

    local IPADDR=$(ip -oneline -4 addr show dev "$IFACE" |
        sed -ne 's/^.* inet \([^ ]\+\) .*$/\1/p' |xargs echo)
    echo_green "Network is UP on $IFACE ($IPADDR)"

    # Default gateway
    local IPGW=$(ip -oneline -4 route show default dev "$IFACE" |
        sed -ne 's/^.* via \([^ ]\+\) .*$/\1/p')
    if [ -n "$IPGW" -a -z "$(ip neigh show "$IPGW" dev "$IFACE")" ]
    then
        # Fill ARP table with a ping
        echo_startgray
        ping -c1 "$IPGW"
    fi
    if [ -z "$(ip neigh show "$IPGW" dev "$IFACE")" ]
    then
        echo_red "Gateway not found"
        return 1
    fi
    echo_green "Gateway ($IPGW) is present"

    # Ping BOX
    echo_startgray
    if ping -c2 "$IPGW"
    then
        echo_green "Gateway pinged"
    else
        echo_red "Gateway unreachable"
        return 1
    fi

    # Ping Google
    echo_startgray
    if ping -c1 "www.google.com"
    then
        echo_green "Google pinged"
    else
        echo_red "Google unreachable"
        return 1
    fi

    return 0
}

COUNT=0
while true
do
    if test_network
    then
        COUNT=$((COUNT+1))
        if [ $COUNT = 1 ]
        then
            echo_blue "First successful ping ^^ !"
        else
            echo_blue "#$COUNT successful ping"
        fi
    else
        if [ $COUNT != 0 ]
        then
            echo_red "You are now disconnected :("
            COUNT=0
        fi
    fi
    sleep 30
done

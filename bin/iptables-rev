#!/bin/sh
# SPDX-License-Identifier: MIT
#
# Copyright (c) 2016-2022 Nicolas Iooss
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
# THE SOFTWARE.
#
# Reverse an iptables command for input/output filter and print it

CMD='iptables'
while [ $# -ge 1 ]
do
    case "$1" in
        -[AI])
            # Chain
            case "$2" in
                INPUT)
                    CMD="$CMD $1 OUTPUT"
                    ;;
                OUTPUT)
                    CMD="$CMD $1 INPUT"
                    ;;
                FORWARD)
                    CMD="$CMD $1 FORWARD"
                    ;;
                PREROUTING)
                    CMD="$CMD $1 POSTROUTING"
                    ;;
                POSTROUTING)
                    CMD="$CMD $1 PREROUTING"
                    ;;
                LOG*)
                    # Usual chain names (eg. LOG) do not get reversed
                    CMD="$CMD $1 $2"
                    ;;
                *)
                    echo >&2 "Unknown chain $2"
                    exit 1
            esac
            shift 2
            ;;
        -i)
            # Input interface
            CMD="$CMD -o $2"
            shift 2
            ;;
        -o)
            # Output interface
            CMD="$CMD -i $2"
            shift 2
            ;;
        -s)
            # Source address
            CMD="$CMD -d $2"
            shift 2
            ;;
        -d)
            # Destination address
            CMD="$CMD -s $2"
            shift 2
            ;;
        --sport|--sports)
            # Source port
            CMD="$CMD --d${1#--s} $2"
            shift 2
            ;;
        --dport|--dports)
            # Destination port
            CMD="$CMD --s${1#--d} $2"
            shift 2
            ;;
        --physdev-in)
            # Received bridge port
            CMD="$CMD --physdev-out $2"
            shift 2
            ;;
        --physdev-out)
            # Sent bridge port
            CMD="$CMD --physdev-in $2"
            shift 2
            ;;
        --physdev-is-in)
            # Has been received through a bridge port
            CMD="$CMD --physdev-is-out"
            shift
            ;;
        --physdev-is-out)
            # Is being sent to a bridge port
            CMD="$CMD --physdev-is-in"
            shift
            ;;
        --mac-source|--pkt-type)
            # Options which do not have a reverse, with an argument
            echo >&2 "Warning: '$1 $2' is not reversible, skipping it"
            shift 2
            ;;
        --tcp-flags)
            # Options which do not have a reverse, with two arguments
            echo >&2 "Warning: '$1 $2 $3' is not reversible, skipping it"
            shift 3
            ;;
        -[46])
            # Options which do not change, without argument
            CMD="$CMD $1"
            shift
            ;;
        -[jmpt]|--comment|--ctstate|--icmp-type|--icmpv6-type|--limit*|--log-prefix|--nflog-prefix|--reject-with|--rt-type|--state)
            # Options which do not change, with an argument
            CMD="$CMD $1 $2"
            shift 2
            ;;
        *)
            echo >&2 "Warning: unknown option $1, keeping it"
            CMD="$CMD $1"
            shift
            ;;
    esac
done

printf %s\\n "$CMD"

#!/bin/sh
# SPDX-License-Identifier: MIT
#
# Copyright (c) 2014-2025 Nicolas Iooss
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
# THE SOFTWARE.
#
# Disable network-facing services
#
# This can be used on a desktop workstation before connecting to an untrusted
# network to reduce the attack surface.

if [ -x /usr/bin/systemctl ] || command -v systemctl > /dev/null 2>&1
then
    # Systemd
    disable_service() {
        # shellcheck disable=SC3043
        local STATE
        STATE=$(systemctl is-active "$1")
        if [ $? = 0 ]
        then
            echo "Disabling $1 (state was $STATE)"
            systemctl disable "$1" || exit $?
            systemctl stop "$1" || exit $?
        fi
    }
elif [ -x /usr/sbin/service ] || command -v service > /dev/null 2>&1
then
    # Debian-based system
    disable_service() {
        if [ -e "/etc/init.d/$1" ]
        then
            echo "Disabling $1 (state $STATE)..."
            service "$1" stop || exit $?
            update-rc.d "$1" remove || exit $?
        fi
    }
else
    echo >&2 "Unknown system, unable to disable services"
    exit 1
fi

# Disable services which are never used on an untrusted network
disable_service avahi-daemon
disable_service proftpd
disable_service vsftpd

# Disable SSH with an extra safety check
if [ -z "$SSH_CLIENT" ]
then
    disable_service ssh
    disable_service sshd
else
    echo "Warning: NOT disabling ssh as current session comes from SSH."
fi

echo "Current network-facing processes:"
ss -lnptu 'not ( src 127.0.0.0/8 or src ::1/128 )' | \
    sed '1d;s/ \+/\t/g' | cut -f1,5,7 | column -t

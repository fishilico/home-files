#!/usr/bin/env python
# -*- coding: utf-8 -*-
# Copyright (c) 2015-2017 Nicolas Iooss
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
# THE SOFTWARE.
"""Print the error message matching the given error code"

Usage example:
    $ for i in -i -n -s -in -is -ns -ins ; do errno -c $i 13 ; done
    EACCES
    13
    Permission denied
    EACCES = 13
    EACCES: Permission denied
    13: Permission denied
    EACCES = 13: Permission denied

Here are some list of error numbers:
* Linux kernel:
  - https://git.kernel.org/cgit/linux/kernel/git/torvalds/linux.git/tree/include/uapi/asm-generic/errno-base.h
  - https://git.kernel.org/cgit/linux/kernel/git/torvalds/linux.git/tree/include/uapi/asm-generic/errno.h

* strace:
  http://sourceforge.net/p/strace/code/ci/master/tree/linux/errnoent.h

@author: Nicolas Iooss
@license: MIT
"""
import argparse
import locale
import errno
import os


def errno_value(value):
    """Transform a string value representing an error number to an integer"""
    try:
        return int(value)
    except ValueError:
        pass
    if hasattr(errno, value):
        return getattr(errno, value)
    raise ValueError("Bad value", value)


if __name__ == '__main__':
    parser = argparse.ArgumentParser(
        description="Convert error codes to messages")
    parser.add_argument('errnos', metavar='ERRNO', nargs='+', type=errno_value,
                        help="error codes")
    parser.add_argument('-c', '--langc', action='store_true',
                        help="use C locale")
    parser.add_argument('-i', '--id', action='store_true',
                        help="find C identifier")
    parser.add_argument('-n', '--num', action='store_true',
                        help="give errnor number")
    parser.add_argument('-s', '--str', action='store_true',
                        help="show description string")
    args = parser.parse_args()

    # By default, show all components
    if not any((args.id, args.num, args.str)):
        args.id = True
        args.num = True
        args.str = True

    # Set locale from environment variables if -c is not given
    locale.setlocale(locale.LC_ALL, 'C' if args.langc else '')

    # Enumerate all arguments
    for n in args.errnos:
        line = ''
        if args.id:
            if n not in errno.errorcode:
                line = '#' + str(n)
            elif args.num:
                line = errno.errorcode[n] + ' = ' + str(n)
            else:
                line = errno.errorcode[n]
        elif args.num:
            line = str(n)

        if args.str:
            if line:
                line += ': '
            line += os.strerror(n)
        print(line)

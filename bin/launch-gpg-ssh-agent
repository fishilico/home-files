#!/bin/sh
# SPDX-License-Identifier: MIT
#
# Copyright (c) 2014-2022 Nicolas Iooss
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
# THE SOFTWARE.
#
# Launch gpg-agent with ssh support

if [ -n "$SSH_AUTH_SOCK" ]
then
    if [ -e "$SSH_AUTH_SOCK" ]
    then
        echo >&2 "ssh agent already exists, its socket is $SSH_AUTH_SOCK"
        exit 1
    else
        echo "\$SSH_AUTH_SOCK is set but does not exist: $SSH_AUTH_SOCK"
        # continuing...
    fi
fi

GPG_AGENT_INFO_PATH="$HOME/.cache/gpg-agent-info"

# GnuPG 2.1 changed the way gpg-agent exposes its SSH socket.
# It also introduced a --launch option to launch the agent.
# The ssh socket is "/run/user/$(id -u)/gnupg/S.gpg-agent.ssh" on Linux.
if gpgconf --launch gpg-agent
then
    # Write compatibility information
    cat > "$GPG_AGENT_INFO_PATH" << EOF
GPG_AGENT_INFO=$(gpgconf --list-dirs agent-socket)
SSH_AUTH_SOCK=$(gpgconf --list-dirs agent-ssh-socket)
EOF
    echo "gpg>=2.1 is used. SSH_AUTH_SOCK=$(gpgconf --list-dirs agent-ssh-socket)"
    echo "For compatibility, you can source $GPG_AGENT_INFO_PATH"
    exit
fi

if [ -r "$GPG_AGENT_INFO_PATH" ]
then
    echo >&2 "Found GPG agent info file: $GPG_AGENT_INFO_PATH"
    echo >&2 "This may indicate that gpg-agent is already running"
    exit 1
fi

if ! gpg-agent --sh --daemon --enable-ssh-support --write-env-file "$GPG_AGENT_INFO_PATH"
then
    ERRCODE="$?"
    echo >&2 "gpg-agent failed with code $ERRCODE"
    exit $ERRCODE
fi

echo "gpg-agent is running. You can source $GPG_AGENT_INFO_PATH to use it."

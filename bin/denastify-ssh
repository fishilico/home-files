#!/bin/sh
#
# Copyright (c) 2015-2016 Nicolas Iooss
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
# THE SOFTWARE.
#
# Remove an entry from ~/.ssh/known_hosts file.
# When a machine changes its ssh host key (for example when it is reinstalled
# without restoring a backup of /etc/ssh), the next time a ssh client attemps
# to connect, it will get the following warning:
#
#     @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
#     @    WARNING: REMOTE HOST IDENTIFICATION HAS CHANGED!     @
#     @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
#     IT IS POSSIBLE THAT SOMEONE IS DOING SOMETHING NASTY!
#     Someone could be eavesdropping on you right now (man-in-the-middle attack)!
#     It is also possible that a host key has just been changed.
#     The fingerprint for the RSA key sent by the remote host is
#     SHA256:qNvLcbigE75cbSmDEEQNumRRLxJ/+MNPk+KuBmdj8Rc.
#     Please contact your system administrator.
#     Add correct host key in /home/user/.ssh/known_hosts to get rid of this message.
#     Offending RSA key in /home/user/.ssh/known_hosts:42
#     RSA host key for 192.0.2.42 has changed and you have requested strict checking.
#     Host key verification failed.
#
# This can be partially avoided by adding "StrictHostKeyChecking no" to the
# relevant section in client's ~/.ssh/config file, but anyway it is simpler to
# remove the offending obsolete entry in ~/.ssh/known_hosts, which is what this
# script does.
DRY_RUN=false
SSH_PORT=22
SSH_HOST=''

while getopts ":hnp:" OPT
do
    case "$OPT" in
        h)
            echo "Usage: $0 [OPTIONS] [USER@]HOST"
            echo "Remove offending entries for HOST from ~/.ssh/known_hosts."
            echo ""
            echo "Options:"
            echo "  -h       display this help and exit"
            echo "  -n       do not modify ~/.ssh/known_hosts (dry-run mode)"
            echo "  -p PORT  use an alternative ssh port number"
            exit
            ;;
        n)
            DRY_RUN=true
            ;;
        p)
            SSH_PORT="$OPTARG"
            ;;
        \?)
            echo >&2 "$0: invalid option '$OPTARG'"
            echo >&2 "Try '$0 -h' for more information."
            exit 1
            ;;
    esac
done
shift $((OPTIND-1))
if [ $# -lt 1 ]
then
    echo >&2 "Error: no host to denastify"
    exit 1
fi
if [ $# -gt 1 ]
then
    echo >&2 "Error: too many hosts to denastify"
    exit 1
fi
SSH_HOST="$1"

# Connect to the host
OUTPUT="$(LANG=C ssh -p "$SSH_PORT" "$SSH_HOST" exit < /dev/null 2>&1)"
SSH_EXITCODE=$?

if echo "$OUTPUT" | grep -q 'IT IS POSSIBLE THAT SOMEONE IS DOING SOMETHING NASTY!'
then
    # Retrieve the information which is needed to denastify the host
    KNOWN_HOST_INFO="$(echo "$OUTPUT" | sed -n 's/^Offending .* key in //p')"
    KH_PATH="${KNOWN_HOST_INFO%:*}"
    KH_LINE="$(echo "${KNOWN_HOST_INFO##*:}" | tr -c -d 0-9)"
    if [ -z "$KH_PATH" ] || [ -z "$KH_LINE" ] || ! [ "$KH_LINE" -ge 0 ]
    then
        echo >&2 "Error: unable to retrieve known_hosts information from message:"
        echo >&2 "$OUTPUT"
        exit 1
    elif [ "$KH_PATH" != "$HOME/.ssh/known_hosts" ]
    then
        echo >&2 "Error: $KH_PATH is not current user known_hosts file"
        exit 1
    elif ! [ -r "$KH_PATH" ]
    then
        echo >&2 "Error: $KH_PATH is not readable"
        exit 1
    fi

    echo "Offending line $KH_LINE of $KH_PATH:"
    sed -n "${KH_LINE}p" "$KH_PATH"
    if "$DRY_RUN"
    then
        echo "[dry-run] sed '${KH_LINE}d' -i \"$KH_PATH\""
    else
        sed "${KH_LINE}d" -i "$KH_PATH"
        echo "... line has been deleted."
    fi
elif [ "$SSH_EXITCODE" -ne 0 ]
then
    echo >&2 "SSH to $SSH_HOST:$SSH_PORT failed with code $SSH_EXITCODE"
    exit 1
else
    echo "SSH connection to $SSH_HOST:$SSH_PORT succeeded."
fi
